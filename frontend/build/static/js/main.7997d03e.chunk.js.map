{"version":3,"sources":["components/firebase-init.js","components/Home.js","components/Form.js","components/Form2.js","components/Success.js","components/Register.js","App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Home","_ref","onLogin","email","setEmail","useState","password","setPassword","error","setError","navigate","useNavigate","auth","getAuth","_jsxs","className","children","_jsx","src","alt","style","color","onSubmit","async","e","preventDefault","signInWithEmailAndPassword","console","htmlFor","type","id","value","onChange","target","required","Form","formData","setFormData","name","property","date","details","handleChange","width","height","title","frameBorder","allow","referrerPolicy","allowFullScreen","response","axios","post","move_in_date","log","data","placeholder","Link","to","Success","Register","fetchSignInMethodsForEmail","length","setTimeout","createUserWithEmailAndPassword","message","App","isAuthenticated","setIsAuthenticated","Router","Routes","Route","path","element","handleLogin","Navigate","Form2","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7997d03e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBbUoxOfocEW-ZQGsQZFpBy4GsQWueQ46g\",\r\n  authDomain: \"your-project-id.firebaseapp.com\",\r\n  projectId: \"your-project-id\",\r\n  storageBucket: \"your-project-id.appspot.com\",\r\n  messagingSenderId: \"your-messaging-sender-id\",\r\n  appId: \"your-app-id\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport './firebase-init'; // Firebase 初期化をインポート\r\nimport './Register.css'; // 会員登録画面と同じCSSを使用\r\n\r\nfunction Home({ onLogin }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const auth = getAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      onLogin(); // ログイン成功時に onLogin 関数を呼び出す\r\n      navigate('/form'); // フォームページに遷移\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      setError('ログインに失敗しました。メールアドレスまたはパスワードを確認してください。');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\"> {/* デザインの統一のためにクラス名を一致 */}\r\n      <img src={`${process.env.PUBLIC_URL}/images/AI.png`} alt=\"Header\" className=\"header-image\" /> {/* 会員登録画面と同じヘッダー画像 */}\r\n      <h2>ログイン</h2>\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit} className=\"register-form\"> {/* デザインの統一のためにクラス名を一致 */}\r\n        <div className=\"form-group\"> {/* デザインの統一 */}\r\n          <label htmlFor=\"email\">メールアドレス</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\"> {/* デザインの統一 */}\r\n          <label htmlFor=\"password\">パスワード</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">ログイン</button> {/* デザインの統一 */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom'; // Link をインポート\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    name: '', \r\n    property: '',\r\n    date: '',\r\n    details: ''\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('https://test3636-b14ba.web.app/api/form', {\r\n        email: formData.email,\r\n        name: formData.name, \r\n        property: formData.property,\r\n        move_in_date: formData.date,\r\n        details: formData.details\r\n      });\r\n      console.log('サーバーからのレスポンス:', response.data);\r\n      console.log('送信したフォームデータ:', formData);\r\n      navigate('/success');\r\n    } catch (error) {\r\n      console.error('Error submitting form', error);\r\n      setError('フォームの送信に失敗しました。サーバーが動作しているか確認してください。');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>研修動画</h2>\r\n      <p>この動画はサンプルです。<br />動画で学んだことを下記フォームに入力し送信してください。</p>\r\n\r\n      <div className=\"video-container\">\r\n        <iframe \r\n          width=\"560\" \r\n          height=\"315\" \r\n          src=\"https://www.youtube.com/embed/4mTucRaGP8s?si=joNc-SQ5f5Utbk7d\" \r\n          title=\"YouTube video player\" \r\n          frameBorder=\"0\" \r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \r\n          referrerPolicy=\"strict-origin-when-cross-origin\" \r\n          allowFullScreen>\r\n        </iframe>\r\n      </div>\r\n\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">メールアドレス <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"mail@example.com\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">氏名 <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"氏名\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"property\">部署名 <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"property\"\r\n            name=\"property\"\r\n            placeholder=\"部署名\"\r\n            value={formData.property}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\">動画視聴日 <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={formData.date}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"details\">感じたこと、学んだこと</label>\r\n          <textarea\r\n            id=\"details\"\r\n            name=\"details\"\r\n            placeholder=\"詳細\"\r\n            value={formData.details}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">送信</button>\r\n      </form>\r\n\r\n      {/* ページ2へのリンクボタンを追加 */}\r\n      <div className=\"link-buttons\">\r\n        <Link to=\"/page2\" className=\"link-button\">2</Link>\r\n        {/* 必要に応じて3、4のリンクボタンも追加できます */}\r\n        <Link to=\"/page3\" className=\"link-button\">3</Link>\r\n        <Link to=\"/page4\" className=\"link-button\">4</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Form2.css';\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    name: '', \r\n    property: '',\r\n    date: '',\r\n    details: ''\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ここにAPIリクエストを送信するコードを追加します\r\n      const response = await axios.post('https://test3636-b14ba.web.app/api/form', {\r\n        email: formData.email,\r\n        name: formData.name, \r\n        property: formData.property,\r\n        move_in_date: formData.date,\r\n        details: formData.details\r\n      });\r\n      console.log('サーバーからのレスポンス:', response.data);\r\n      console.log('送信したフォームデータ:', formData);\r\n      navigate('/success');\r\n    } catch (error) {\r\n      console.error('Error submitting form', error);\r\n      setError('フォームの送信に失敗しました。サーバーが動作しているか確認してください。');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>研修動画2</h2>\r\n      <p>この動画はサンプルです。<br />動画で学んだことを下記フォームに入力し送信してください。</p>\r\n\r\n      <div className=\"video-container\">\r\n        <iframe \r\n          width=\"560\" \r\n          height=\"315\" \r\n          src=\"https://www.youtube.com/embed/4mTucRaGP8s?si=joNc-SQ5f5Utbk7d\" \r\n          title=\"YouTube video player\" \r\n          frameBorder=\"0\" \r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \r\n          referrerPolicy=\"strict-origin-when-cross-origin\" \r\n          allowFullScreen>\r\n        </iframe>\r\n      </div>\r\n\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">メールアドレス <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"mail@example.com\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">氏名 <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"氏名\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"property\">部署名 <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"property\"\r\n            name=\"property\"\r\n            placeholder=\"部署名\"\r\n            value={formData.property}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\">動画視聴日 <span className=\"required\">必須</span></label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={formData.date}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"details\">感じたこと、学んだこと</label>\r\n          <textarea\r\n            id=\"details\"\r\n            name=\"details\"\r\n            placeholder=\"詳細\"\r\n            value={formData.details}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">送信</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './Success.css'; // CSSファイルのインポート\r\n\r\nfunction Success() {\r\n  return (\r\n    <div className=\"success-container\">\r\n      <img src={`${process.env.PUBLIC_URL}/images/back.jpeg`} alt=\"Header\" className=\"header-image\" />\r\n      <h2>フォームの送信が完了しました</h2>\r\n      <p>ありがとうございました。</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React, { useState } from 'react';\r\nimport { getAuth, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from \"firebase/auth\";\r\nimport { useNavigate, Link } from 'react-router-dom'; // Linkをインポート\r\nimport './Register.css'; // CSS ファイルをインポート\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const auth = getAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const signInMethods = await fetchSignInMethodsForEmail(auth, email);\r\n\r\n      if (signInMethods.length > 0) {\r\n        setError('このメールアドレスは既に使用されています。ログインページにリダイレクトします。');\r\n        setTimeout(() => {\r\n          navigate('/login');\r\n        }, 2000); // 2秒後にログインページへリダイレクト\r\n      } else {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n        navigate('/login'); // 登録後ログインページへリダイレクト\r\n      }\r\n    } catch (error) {\r\n      console.error('エラー詳細:', error); // 追加: エラーメッセージをコンソールに出力\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <img src={`${process.env.PUBLIC_URL}/images/AI.png`} alt=\"Header\" className=\"header-image\" />\r\n      <h2>会員登録</h2>\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit} className=\"register-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">メールアドレス</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">パスワード</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">登録</button>\r\n      </form>\r\n      <p className=\"login-link\">\r\n        <Link to=\"/login\">ログインはこちら</Link> {/* ログインページへのリンク */}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Form from './components/Form';\r\nimport Form2 from './components/Form2'; // Form2 コンポーネントをインポート\r\nimport Success from './components/Success';\r\nimport Register from './components/Register';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/login\" element={<Home onLogin={handleLogin} />} /> {/* onLogin を渡す */}\r\n        <Route path=\"/form\" element={isAuthenticated ? <Form /> : <Navigate to=\"/login\" />} />\r\n        <Route path=\"/success\" element={isAuthenticated ? <Success /> : <Navigate to=\"/login\" />} />\r\n        <Route path=\"/page2\" element={isAuthenticated ? <Form2 /> : <Navigate to=\"/login\" />} /> {/* 新しいルートを追加 */}\r\n        <Route path=\"/\" element={<Navigate to=\"/register\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}